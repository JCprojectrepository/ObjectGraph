limit_req_zone lrz_key_all zone=lrz_all:50m rate=200r/s;

upstream front_container {
    # コンテナのサービス名を指定し、名前解決
    server front:80;
}


upstream django_container {
    # コンテナのサービス名を指定し、名前解決
    server web:31030;
}

server {
    listen 80;
    listen [::]:80;
    server_name code-college.jp;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name code-college.jp;
    ssl_certificate /etc/letsencrypt/live/code-college.jp/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/code-college.jp/privkey.pem;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    location /static {
        alias /usr/share/nginx/html/static;
        limit_req zone=lrz_all burst=1000 nodelay;
    }

    location /media {
        alias /usr/share/nginx/html/media;
        limit_req zone=lrz_all burst=1000 nodelay;
    }

    location / {
        proxy_pass http://front_container;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        limit_req zone=lrz_all burst=1000 nodelay;
    }

    # NextAuthへのリクエストをプロキシ(DRFよりも先に記述する必要あり)
    location /api/auth/ {
        proxy_pass http://front_container;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Djangoへのリクエストをプロキシ
    location /services/ {
        proxy_pass http://django_container/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}